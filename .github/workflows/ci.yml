name: Django CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      DEBUG: 1
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: localhost
      DB_PORT: 5432
      DJANGO_SETTINGS_MODULE: bolid_backend.settings
      PYTHONUNBUFFERED: 1
      STATIC_ROOT: /tmp/staticfiles

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run flake8
        run: flake8 .

      - name: Wait for Postgres
        run: |
          until pg_isready -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME; do
            sleep 1
          done

      - name: Check migrations
        run: python manage.py makemigrations --check --dry-run

      - name: Apply migrations
        run: python manage.py migrate --noinput

      - name: Run tests
        run: python manage.py test

      - name: Check static files
        run: python manage.py collectstatic --dry-run --noinput

      - name: Build Docker image
        run: docker build -t bolid-backend-ci .

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Trigger Render Deploy
        run: |
          curl -X POST \
            -H "Accept: application/json" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -d '' \
            https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys
